import os
import numpy as np
from numpy import cov
from numpy import genfromtxt
import json
import csv
import collections
from scipy import stats
from scipy.stats import spearmanr

features = [
    "length",
    "bpm",
    "average_loudness",
    "onset_rate",
    "replay_gain",
    "tuning_frequency"  
]

json_array = []

complex_features = [
    "beats_position",
    "chords_histogram",
    "hpcp_mean",
]

def load_json():
    """
        To load data from json dumps.
    """
    PATH = "00/"

    # json_files = [pos_json for pos_json in os.listdir(PATH) if pos_json.endswith('.json')]
    for pos_json in os.listdir(PATH):
        if pos_json.endswith('.json'):
            with open(PATH+pos_json) as f:
                data = json.load(f)
                json_array.append(extract_features(data))
    print(len(json_array))

    # arr = [row[0] for row in json_array]
    # print(len(arr))


def write_csv():
    """
        Helper function to write data to csv.
    """
    PATH = "00/"

    # json_files = [pos_json for pos_json in os.listdir(PATH) if pos_json.endswith('.json')]
    for pos_json in os.listdir(PATH):
        if pos_json.endswith('.json'):
            with open(PATH+pos_json) as f:
                data = json.load(f)
                json_array.append(extract_features(data))

    with open("output.csv", "w") as f:
        writer = csv.writer(f)
        writer.writerows(json_array)

def load_csv(FNAME):
    data = genfromtxt(FNAME, delimiter=',')
    return data
    
def extract_features(decoded_data):

    arr = []
    #length
    arr.append(decoded_data["metadata"]["audio_properties"]["length"])
    #bpm
    arr.append(decoded_data["rhythm"]["bpm"])
    #average_loudness
    arr.append(decoded_data["lowlevel"]["average_loudness"])
    #onset_rate
    arr.append(decoded_data["rhythm"]["onset_rate"])
    #replay_gain
    arr.append(decoded_data["metadata"]["audio_properties"]["replay_gain"])
    #tuning_frequency
    arr.append(decoded_data["tonal"]["tuning_frequency"])
    
    return arr


def calc_z_scores(data):
    """
    used to calculate column vise z-scores for the list of data
    """
    data = np.array(data)
    z = np.zeros(data.shape)
    for i in range(0,data.shape[1]):
        arr = data[:, i].astype(np.float)
        arr = np.abs(stats.zscore(arr))
        z[:,i] = arr

    return z

def identify_anomalies(data):
    """
     returns a dict containing {ids,count}
     where count is the number of columns 
     threshold is taken to be 1.65 for a 95 % confidence value
    """
    arr = []
    z = calc_z_scores(data)
    for i in range(0,z.shape[1]):
        arr = np.concatenate((np.array(arr),np.where(z[:, i] > 1.65)[0]))
 
    unique, counts = np.unique(arr, return_counts=True)
    ids = dict(zip(unique, counts))
    return ids
    #check for ids which have more than or equalto 3 outlying features



if __name__ == "__main__":
    
    data = load_csv("output.csv")
    ids = identify_anomalies(data)

    outliers = [k for k, v in ids.items() if v >= 3]
    print("The offset of mbids which ate most likely to be misclassified are :")
    print(outliers)



# Test
# data1 = [0.49922901392,1.01006805897,1.52090704441,2.02013611794,2.51936507225,3.01859402657,3.51782298088,4.01705217361,4.5046710968,5.00390005112,5.50312900543,6.025578022,6.53641700745,7.04725599289,7.55809497833,8.06893444061,8.59138298035,9.16027164459,9.74077033997,10.3096599579,10.8785486221,11.4474372864,12.0163259506,12.5736055374,13.1308841705,13.6765527725,14.2222223282,14.7678909302,15.2671203613,15.7663488388,16.2655773163,16.7648067474,17.2640361786,17.7748756409,18.2741031647,18.7617225647,19.2493419647,19.7369613647,20.2245807648,20.7238082886,21.2346477509,21.7570972443,22.2679367065,22.7671642303,23.2780036926,23.7888431549,24.2880725861,24.7873020172,25.286529541,25.7857589722,26.2733783722,26.7726078033,27.2718353271,27.7710647583,28.2819042206,28.7927436829,29.2803630829,29.7795906067,30.2788200378,30.778049469,31.2772789001,31.776506424,32.2757377625,32.7749671936,33.2741928101,33.7618141174,34.2494316101,34.7486610413,35.2478904724,35.7471199036,36.2463493347,36.7455787659,37.244808197,37.7440338135,38.2432632446,38.7424926758,39.2417221069,39.7525634766,40.251789093,40.7510185242,41.2502479553,41.7494773865,42.2487068176,42.7479362488,43.2471656799,43.7463951111,44.2456245422,44.7448501587,45.2556915283,45.7549209595,46.2541503906,46.7533760071,47.2526054382,47.7518348694,48.2510643005,48.7502937317,49.2495231628,49.748752594,50.2479820251,50.7472114563,51.2464370728,51.7456665039,52.2448959351,52.7441253662,53.2433547974,53.7541923523,54.2534217834,54.7526512146,55.240272522,55.7511100769,56.2503395081,56.761177063,57.2604064941,57.7596359253,58.2588653564,58.7580947876,59.2573242188,59.7565536499,60.2557830811,60.7550086975,61.2542381287,61.7534675598,62.252696991,62.7519264221,63.2511558533,63.7503852844,64.2496109009,64.748840332,65.2480697632,65.7472991943,66.2465286255,66.7457580566,67.2449874878,67.7558288574,68.2550582886,68.7542877197,69.2419052124,69.7411346436,70.2403640747,70.7395935059,71.238822937,71.7496566772,72.2488861084,72.7481155396,73.2473449707,73.7465744019,74.2574157715,74.7566452026,75.2558746338,75.7551040649,76.2543258667,76.7535552979,77.252784729,77.7520141602,78.2512435913,78.7504730225,79.2497024536,79.7489318848,80.2481613159,80.7473907471,81.2466201782,81.7458496094,82.2450790405,82.7443084717,83.2435379028,83.742767334,84.2419967651,84.7412261963,85.2404556274,85.7512893677,86.2505187988,86.74974823,87.2489776611,87.7482070923,88.2474365234,88.7466659546,89.2458953857,89.7567367554,90.2559585571,90.7551879883,91.2544174194,91.7536468506,92.2528762817,92.7521057129,93.251335144,93.7505645752,94.2497940063,94.7490234375,95.2482528687,95.7474822998,96.246711731,96.7575454712,97.2451705933,97.7444000244,98.2436294556,98.7428588867,99.2420806885,99.7529220581,100.252151489,100.75138092,101.238998413,101.738227844,102.237457275,102.736686707,103.235916138,103.746757507,104.245986938,104.74521637,105.244445801,105.743675232,106.254508972,106.753738403,107.252967834,107.752197266,108.251426697,108.750656128,109.249885559,109.74911499,110.248344421,110.747573853,111.246803284,111.746032715,112.245262146,112.744483948,113.243713379,113.74294281,114.242172241,114.741401672,115.240631104,115.751472473,116.250701904,116.749931335,117.249160767,117.748390198,118.247619629,118.74684906,119.246078491,119.745300293,120.244529724,120.743759155,121.254600525,121.753829956,122.253059387,122.752288818,123.25151825,123.750747681,124.249977112,124.749206543,125.248435974,125.747665405,126.246894836,126.746116638,127.245346069,127.7445755,128.243804932,128.743041992,129.242263794,129.753097534,130.263946533,130.774780273,131.262405396,131.761627197,132.260864258,132.76008606,133.25932312,133.758544922,134.257781982,134.757003784,135.256240845,135.755462646,136.254684448,136.74230957,137.241546631,137.740768433,138.251602173,138.762451172,139.261672974,139.749298096,140.236907959,140.724533081,141.235366821,141.734603882,142.245437622,142.744674683,143.243896484,143.743133545,144.242355347,144.741577148,145.240814209,145.751647949,146.25088501,146.750106812,147.249343872,147.748565674,148.247802734,148.747024536,149.246261597,149.745483398,150.256317139,150.755554199,151.243179321,151.742401123,152.253234863,152.752471924,153.251693726,153.762542725,154.250152588,154.749389648,155.24861145,155.747848511,156.247070312,156.746307373,157.245529175,157.744766235,158.243988037,158.731613159,159.242446899,159.741668701,160.240905762,160.740127563,161.239364624,161.750198364,162.249435425,162.748657227,163.236282349,163.747116089,164.246353149,164.745574951,165.244796753,165.744033813,166.243255615,166.742492676,167.253326416,167.752563477,168.251785278,168.751022339,169.250244141,169.749481201,170.248703003,170.747940063,171.247161865,171.746398926,172.245620728,172.744842529,173.24407959,173.743301392,174.219314575,174.672103882,175.124893188,175.519638062,175.914367676,176.309112549,176.692245483,177.075378418,177.470108032,177.864852905,178.25958252,178.642715454,179.025848389,179.408981323,179.86177063,180.337768555,180.813781738,181.347839355,181.870285034,182.392745972,182.926803589,183.472473145,184.0181427,184.633468628,185.248794556,185.875732422,186.502670288,187.129608154,187.640457153,188.162902832,188.685348511,189.196182251,189.70703125,190.229476929,190.72869873,191.239547729,191.75038147,192.24961853,192.748840332,193.236465454,193.747299194,194.246520996,194.745758057,195.244979858,195.744216919,196.243438721,196.742675781,197.241897583,197.741134644,198.251968384,198.751205444,199.250427246,199.749649048,200.248886108,200.74810791,201.247344971,201.746566772,202.245803833,202.745025635,203.244262695,203.743484497,204.242721558,204.741943359,205.24118042,205.740402222,206.239639282,206.738861084,207.238098145,207.748931885,208.248153687,208.747390747,209.246612549,209.745849609,210.245071411,210.744308472,211.255142212,211.754379272,212.253601074,212.752838135,213.252059937,213.751281738,214.250518799,214.749740601,215.248977661,215.748199463,216.247436523,216.746658325,217.245895386,217.745117188,218.244354248,218.74357605,219.24281311,219.753646851,220.252868652,220.752105713,221.239730835,221.727340698,222.238174438,222.737411499,223.236633301,223.7474823,224.246704102,224.745941162,225.245162964,225.744400024,226.243621826,226.742858887,227.253692627,227.752914429,228.252151489,228.751373291,229.250610352,229.749832153,230.249069214,230.748291016,231.247528076,231.746749878,232.245986938,232.74520874,233.244445801,233.743667603,234.242904663,234.742126465,235.252960205,235.752197266,236.263031006,236.762268066,237.261489868,237.760726929,238.25994873,238.759185791,239.258407593,239.757644653,240.256866455,240.756088257,241.266937256,241.777770996,242.277008057,242.76461792,243.252243042,243.763076782,244.262313843,244.761535645,245.388473511,246.015411377,246.642349243,247.257675171,247.896224976,248.53477478,249.161712646,249.800262451,250.427200317,251.065750122,251.715911865,252.319625854,252.934967041,253.561904907,254.304931641,255.059585571,255.814239502,256.580505371,257.346740723,258.089782715,258.844451904]
# data2 = [0.476009070873,0.975238084793,1.48607707024,1.99691605568,2.50775504112,3.01859402657,3.54104304314,4.06349182129,4.58594083786,5.10838985443,5.630838871,6.15328788757,6.67573690414,7.19818592072,7.72063493729,8.24308395386,8.75392246246,9.27637195587,9.79882049561,10.321269989,10.8437185287,11.3661680222,11.8886165619,12.4110651016,12.933514595,13.4559631348,13.9784126282,14.4892511368,15.0000905991,15.5225391388,16.0449886322,16.5558280945,17.0782756805,17.600725174,18.1115646362,18.6340141296,19.1564617157,19.6789112091,20.2013607025,20.7354183197,21.246257782,21.7687072754,22.2911567688,22.825214386,23.3360538483,23.8585033417,24.3809528351,24.9034004211,25.4142398834,25.9366893768,26.4591369629,26.9815864563,27.5040359497,28.0264854431,28.5489330292,29.0713825226,29.593832016,30.1162815094,30.6387290955,31.1611785889,31.6836280823,32.2060775757,32.7285270691,33.2509727478,33.7734222412,34.2958717346,34.818321228,35.3407707214,35.8632202148,36.3856697083,36.908115387,37.4305648804,37.9530143738,38.4754638672,38.9979133606,39.520362854,40.0312004089,40.5536499023,41.0760993958,41.6101570129,42.1209983826,42.6434440613,43.1658935547,43.6999549866,44.2107925415,44.7216300964,45.2440795898,45.7665290833,46.2889785767,46.8114280701,47.3338775635,47.8563270569,48.3787727356,48.901222229,49.4236717224,49.9461212158,50.4685707092,50.9910202026,51.513469696,52.0359191895,52.5583648682,53.0808143616,53.5916557312,54.1141014099,54.6365509033,55.1590003967,55.6814498901,56.2038993835,56.726348877,57.2487983704,57.7712478638,58.2936935425,58.8161430359,59.3385925293,59.8610420227,60.3834915161,60.9059410095,61.4283905029,61.9508361816,62.4616775513,62.9841270447,63.5065765381,64.0290222168,64.5514755249,65.0855331421,65.6079788208,66.142036438,66.6644897461,67.1753311157,67.686164856,68.2086181641,68.7310638428,69.2535171509,69.7759628296,70.2868041992,70.8208618164,71.3433074951,71.8657608032,72.3765945435,72.91065979,73.4214935303,73.9439468384,74.4663925171,75.0004501343,75.5229034424,76.0337371826,76.5561904907,77.0902481079,77.6010894775,78.1119232178,78.6343765259,79.1568222046,79.6792755127,80.2017211914,80.7241744995,81.2466201782,81.7690658569,82.291519165,82.8139648438,83.3364181519,83.8588638306,84.3813171387,84.9037628174,85.4262084961,85.9486618042,86.4711074829,86.9819488525,87.5160064697,88.0384597778,88.5609054565,89.0833511353,89.6058044434,90.116645813,90.6390914917,91.1615371704,91.695602417,92.2064361572,92.7288894653,93.251335144,93.7737884521,94.2962341309,94.8070755005,95.3295211792,95.8519744873,96.374420166,96.8968658447,97.4193191528,97.9417648315,98.4642181396,98.9866638184,99.5091171265,100.031562805,100.554008484,101.076461792,101.598907471,102.121360779,102.643806458,103.166259766,103.688705444,104.211151123,104.733604431,105.25605011,105.778503418,106.300949097,106.811790466,107.345848083,107.868293762,108.39074707,108.90158844,109.424034119,109.946479797,110.480545044,110.991378784,111.502220154,112.036277771,112.558731079,113.081176758,113.603622437,114.126075745,114.648521423,115.170974731,115.681808472,116.20426178,116.726707458,117.249160767,117.771606445,118.294059753,118.816505432,119.338951111,119.861404419,120.383850098,120.906303406,121.428749084,121.951202393,122.473648071,122.99609375,123.50693512,124.029388428,124.551834106,125.085891724,125.596733093,126.119178772,126.64163208,127.164077759,127.686531067,128.208984375,128.731430054,129.242263794,129.764709473,130.28717041,130.809616089,131.332061768,131.854507446,132.376953125,132.899414062,133.421859741,133.94430542,134.466751099,134.989196777,135.511657715,136.034103394,136.556549072,137.067382812,137.601455688,138.123901367,138.646347046,139.168792725,139.691238403,140.202087402,140.73614502,141.270202637,141.804260254,142.315093994,142.825942993,143.348388672,143.870834351,144.381668091,144.904129028,145.426574707,145.960632324,146.471466064,146.982315063,147.504760742,148.027206421,148.5496521,149.072113037,149.594558716,150.117004395,150.639450073,151.161895752,151.684356689,152.206802368,152.729248047,153.251693726,153.762542725,154.296600342,154.819046021,155.341491699,155.852325439,156.386398315,156.908843994,157.431289673,157.953735352,158.47618103,158.987030029,159.509475708,160.031921387,160.565979004,161.076828003,161.587661743,162.12171936,162.655776978,163.166610718,163.677459717,164.199905396,164.722351074,165.244796753,165.76725769,166.301315308,166.823760986,167.346206665,167.857055664,168.379501343,168.901947021,169.4243927,169.946838379,170.469299316,170.991744995,171.502578735,172.025024414,172.547485352,173.06993103,173.592376709,174.114822388,174.637283325,175.171340942,175.682174683,176.204620361,176.72706604,177.261123657,177.771972656,178.294418335,178.816864014,179.339309692,179.86177063,180.37260437,180.895050049,181.417495728,181.939956665,182.462402344,182.984848022,183.507293701,184.029754639,184.552200317,185.074645996,185.597091675,186.119537354,186.641998291,187.152832031,187.686889648,188.209335327,188.731781006,189.242630005,189.776687622,190.299133301,190.821578979,191.332427979,191.854873657,192.377319336,192.899765015,193.422225952,193.944671631,194.46711731,194.989562988,195.512008667,196.034469604,196.556915283,197.079360962,197.601806641,198.124252319,198.646713257,199.157546997,199.679992676,200.202438354,200.724899292,201.247344971,201.769790649,202.292236328,202.814697266,203.337142944,203.847976685,204.382034302,204.90447998,205.426940918,205.937774658,206.471832275,206.982666016,207.516723633,208.03918457,208.561630249,209.084075928,209.606521606,210.128982544,210.651428223,211.162261963,211.684707642,212.207168579,212.741226196,213.252059937,213.762893677,214.296951294,214.831008911,215.34185791,215.85269165,216.375137329,216.897598267,217.420043945,217.942489624,218.464935303,218.987380981,219.509841919,220.032287598,220.554733276,221.077178955,221.599639893,222.122085571,222.632919312,223.166976929,223.689422607,224.211883545,224.734329224,225.256774902,225.767608643,226.29006958,226.812515259,227.346572876,227.857406616,228.368255615,228.902313232,229.43637085,229.94720459,230.469650269,230.992111206,231.526168823,232.06022644,232.571060181,233.093505859,233.604354858,234.126800537,234.649246216,235.171691895,235.694152832,236.216598511,236.727432251,237.24987793,237.772338867,238.294784546,238.817230225,239.339675903,239.862121582,240.38458252,240.907028198,241.429473877,241.951919556,242.474365234,242.996826172,243.519271851,244.041717529,244.564163208,245.086624146,245.597457886,246.131515503,246.653961182,247.17640686,247.687255859,248.209701538,248.732147217,249.242996216,249.777053833,250.31111145,250.82194519,251.332778931,251.855239868,252.377685547,252.911743164,253.434188843,253.956634521,254.467483521,254.989929199,255.512374878,256.034820557,256.557281494,257.068115234,257.602172852,258.113006592,258.647064209,259.169525146,259.691955566,260.214416504,260.736877441,261.259307861,261.781768799,262.304199219,262.826660156,263.349121094,263.871551514,264.382385254,264.916442871,265.427307129,265.949737549,266.472198486,266.983032227,267.482269287,267.935058594,268.39944458,268.863861084,269.32824707,269.792633057,270.257049561]
# data1 = np.array(data1)
# data2 = np.array(data2)
# idx = np.random.randint(data1.size, size=100)
# data1 = data1[np.sort(idx)]
# data2 = data2[np.sort(idx)]
# corr, _ = spearmanr(data1, data2)
# print(corr)
